{
  "name": "hospital-management-system",
  "version": "1.0.0",
  "description": "Comprehensive Hospital Management System with 28+ modules",
  "private": true,
  "workspaces": [
    "backend",
    "frontend",
    "mobile"
  ],
  "scripts": {
    "install:all": "npm run install:backend && npm run install:frontend && npm run install:mobile",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "install:mobile": "cd mobile && npm install",
    "build:all": "npm run build:backend && npm run build:frontend && npm run build:mobile",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:mobile": "cd mobile && npm run build",
    "test:all": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "test:unit": "npm run test:unit:backend && npm run test:unit:frontend",
    "test:unit:backend": "cd backend && npm run test:unit",
    "test:unit:frontend": "cd frontend && npm run test:unit",
    "test:integration": "npm run test:integration:backend && npm run test:integration:frontend",
    "test:integration:backend": "cd backend && npm run test:integration",
    "test:integration:frontend": "cd frontend && npm run test:integration",
    "test:e2e": "npm run test:e2e:frontend",
    "test:e2e:frontend": "cd frontend && npm run test:e2e",
    "test:accessibility": "cd frontend && npm run test:accessibility",
    "test:visual": "cd frontend && npm run test:visual",
    "test:performance": "cd backend && npm run test:performance",
    "test:load": "cd backend && npm run test:load",
    "test:security": "cd backend && npm run test:security",
    "test:penetration": "cd backend && npm run test:penetration",
    "lint:all": "npm run lint:backend && npm run lint:frontend && npm run lint:mobile",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:mobile": "cd mobile && npm run lint",
    "lint:all:fix": "npm run lint:backend:fix && npm run lint:frontend:fix && npm run lint:mobile:fix",
    "lint:backend:fix": "cd backend && npm run lint -- --fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "lint:mobile:fix": "cd mobile && npm run lint -- --fix",
    "format:all": "npm run format:backend && npm run format:frontend && npm run format:mobile",
    "format:backend": "cd backend && npm run format",
    "format:frontend": "cd frontend && npm run format",
    "format:mobile": "cd mobile && npm run format",
    "quality:all": "npm run lint:all && npm run format:all && npm run typecheck:all",
    "quality:backend": "npm run lint:backend && npm run format:backend && npm run typecheck:backend",
    "quality:frontend": "npm run lint:frontend && npm run format:frontend && npm run typecheck:frontend",
    "typecheck:all": "npm run typecheck:backend && npm run typecheck:frontend",
    "typecheck:backend": "cd backend && npx tsc --noEmit",
    "typecheck:frontend": "cd frontend && npm run type-check",
    "dev:backend": "cd backend && npm run start:dev",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:mobile": "cd mobile && npm start",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "setup": "npm run setup:env && npm run setup:db",
    "setup:env": "cp .env.example .env",
    "setup:db": "cd backend && npm run db:migrate && npm run db:seed",
    "test:staging": "cd backend && npm run test:e2e -- --config=test/staging.config.js",
    "test:quality": "npm run lint:all && npm run format:all && npm run typecheck:all"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "chai": "^6.2.0",
    "eslint": "^9.29.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "prettier": "^3.0.0",
    "typescript": "^5.0.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ],
    "prisma/schema.prisma": [
      "prettier --write"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/your-org/hospital-management-system.git"
  },
  "keywords": [
    "hospital",
    "management",
    "healthcare",
    "hms",
    "medical",
    "patient",
    "doctor",
    "appointment",
    "billing",
    "pharmacy"
  ],
  "author": "Your Organization",
  "license": "MIT",
  "dependencies": {
    "@heroicons/react": "^2.0.18",
    "@nestjs/axios": "^3.1.3",
    "lucide-react": "^0.263.1"
  }
}
