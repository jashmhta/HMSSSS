{
  "name": "hms-backend",
  "version": "1.0.0",
  "description": "Hospital Management System Backend API",
  "author": "Your Organization",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:enterprise": "node test-runner.js",
    "test:unit": "npm run test -- --testPathPattern=\"\\.spec\\.ts$\" --coverage",
    "test:integration": "npm run test -- --testPathPattern=\"controller\\.spec\\.ts$\"",
    "test:performance": "npm run test -- --testPathPattern=\"performance\\.test\\.ts$\"",
    "test:security": "npm run test -- --testNamePattern=\"Security\"",
    "test:quality": "npm run lint && npm run format:check && npx tsc --noEmit",
    "db:migrate": "prisma migrate dev",
    "db:generate": "prisma generate",
    "db:seed": "prisma db seed",
    "db:studio": "prisma studio",
    "db:push": "prisma db push"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.0.0",
    "@nestjs/websockets": "^10.0.0",
    "@nestjs/jwt": "^10.0.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/swagger": "^7.0.0",
    "@nestjs/throttler": "^5.0.0",
    "@nestjs/cache-manager": "^2.0.0",
    "@nestjs/bull": "^10.0.0",
    "@nestjs/schedule": "^4.0.0",
    "@nestjs/terminus": "^10.0.0",
    "@prisma/client": "^5.0.0",
    "prisma": "^5.0.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "bcrypt": "^5.0.0",
    "class-validator": "^0.14.0",
    "class-transformer": "^0.5.0",
    "rxjs": "^7.8.1",
    "reflect-metadata": "^0.2.0",
    "cache-manager": "^5.0.0",
    "cache-manager-redis-store": "^3.0.0",
    "bull": "^4.0.0",
    "socket.io": "^4.7.0",
    "multer": "^1.4.5-lts.1",
    "sharp": "^0.33.0",
    "pdfkit": "^0.15.0",
    "exceljs": "^4.4.0",
    "nodemailer": "^6.9.0",
    "twilio": "^5.0.0",
    "stripe": "^15.0.0",

    "helmet": "^7.0.0",
    "express-rate-limit": "^7.0.0",
    "compression": "^1.7.0",
    "cors": "^2.8.5",
    "morgan": "^1.10.0",
    "winston": "^3.11.0",
    "joi": "^17.0.0",
    "uuid": "^10.0.0",
    "moment": "^2.30.0",
    "lodash": "^4.17.0",
    "axios": "^1.6.0",
    "form-data": "^4.0.0",
    "jsonwebtoken": "^9.0.0",
    "crypto-js": "^4.2.0",
    "qrcode": "^1.5.0",
    "barcode": "^0.1.0",
    "speakeasy": "^2.0.0",
    "ical-generator": "^7.0.0",
    "node-cron": "^3.0.0",
    "archiver": "^7.0.0",
    "unzipper": "^0.12.0",
    "fs-extra": "^11.0.0",
    "mime-types": "^2.1.0",
    "file-type": "^19.0.0",
    "sanitize-filename": "^1.6.0",

    "useragent": "^2.3.0",
    "geoip-lite": "^1.4.0",
    "device-detector-js": "^3.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/passport-jwt": "^4.0.0",
    "@types/passport-local": "^1.0.0",
    "@types/bcrypt": "^5.0.0",
    "@types/multer": "^1.4.11",
    "@types/pdfkit": "^0.13.4",
    "@types/nodemailer": "^6.4.14",
    "@types/uuid": "^10.0.0",
    "@types/lodash": "^4.17.0",
    "@types/crypto-js": "^4.2.0",
    "@types/qrcode": "^1.5.5",
    "@types/node-cron": "^3.0.11",
    "@types/archiver": "^6.0.2",
    "@types/fs-extra": "^11.0.4",
    "@types/mime-types": "^2.1.4",

    "@types/useragent": "^2.3.4",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s",
      "!**/*.module.ts",
      "!**/*.config.ts",
      "!**/main.ts",
      "!**/index.ts",
      "!**/*.d.ts",
      "!**/coverage/**",
      "!**/node_modules/**",
      "!**/dist/**"
    ],
    "coverageDirectory": "../coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html",
      "json-summary"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 85,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    },
    "testEnvironment": "node",
    "setupFilesAfterEnv": [
      "<rootDir>/../test/setup.ts"
    ],
    "testTimeout": 30000,
    "maxWorkers": 4,
    "detectOpenHandles": true,
    "forceExit": true,
    "clearMocks": true,
    "resetMocks": true,
    "restoreMocks": true,
    "verbose": true,
    "bail": 1
  }
}