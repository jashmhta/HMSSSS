---
# Ultimate HMS - PostgreSQL High Availability Cluster
# This configuration sets up a PostgreSQL cluster with Patroni for HA

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
data:
  postgresql.conf: |
    # PostgreSQL configuration for HMS
    listen_addresses = '*'
    port = 5432
    max_connections = 1000
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 4MB
    min_wal_size = 1GB
    max_wal_size = 4GB
    max_worker_processes = 4
    max_parallel_workers_per_gather = 2
    max_parallel_workers = 4
    max_parallel_maintenance_workers = 2
    wal_level = replica
    synchronous_commit = on
    archive_mode = on
    archive_command = 'cd .'
    max_wal_senders = 10
    max_replication_slots = 10
    hot_standby = on
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_statement = 'ddl'
    log_timezone = 'UTC'
    timezone = 'UTC'
    lc_messages = 'en_US.UTF-8'
    lc_monetary = 'en_US.UTF-8'
    lc_numeric = 'en_US.UTF-8'
    lc_time = 'en_US.UTF-8'
    default_text_search_config = 'pg_catalog.english'

  pg_hba.conf: |
    # PostgreSQL Host Based Authentication
    local all postgres peer
    local all all md5
    host all all 127.0.0.1/32 md5
    host all all ::1/128 md5
    host all all 0.0.0.0/0 md5
    host replication replicator 0.0.0.0/0 md5

  patroni.yml: |
    scope: postgres-hms
    namespace: /db/
    name: postgresql-0

    restapi:
      listen: 0.0.0.0:8008
      connect_address: postgresql-0.postgresql-hms:8008

    etcd3:
      hosts:
      - etcd-cluster:2379

    bootstrap:
      dcs:
        ttl: 30
        loop_wait: 10
        retry_timeout: 10
        maximum_lag_on_failover: 1048576
        postgresql:
          use_pg_rewind: true
          use_slots: true
          parameters:
            wal_level: replica
            hot_standby: "on"
            wal_keep_segments: 8
            max_wal_senders: 10
            max_replication_slots: 10
            wal_log_hints: "on"
            archive_mode: "on"
            archive_timeout: 1800s
            archive_command: mkdir -p ../wal_archive && cp %p ../wal_archive/%f

      initdb:
      - encoding: UTF8
      - data-checksums

      pg_hba:
      - host replication replicator 0.0.0.0/0 md5
      - host all all 0.0.0.0/0 md5

    postgresql:
      listen: "*:5432"
      connect_address: postgresql-0.postgresql-hms:5432
      data_dir: /home/postgres/pgdata/data
      bin_dir: /usr/lib/postgresql/15/bin
      config_dir: /home/postgres/pgdata
      pgpass: /tmp/pgpass
      authentication:
        replication:
          username: replicator
          password: replicator_password
        superuser:
          username: postgres
          password: postgres_password
      parameters:
        unix_socket_directories: /tmp
      create_replica_methods:
      - basebackup
      restore: /usr/local/bin/restore.sh

---
# PostgreSQL StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
    system: postgresql
spec:
  serviceName: postgresql-hms
  replicas: 3
  selector:
    matchLabels:
      app: hospital-management-system
      component: database
      system: postgresql
  template:
    metadata:
      labels:
        app: hospital-management-system
        component: database
        system: postgresql
    spec:
      serviceAccountName: hms-admin
      priorityClassName: hms-critical
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      initContainers:
      - name: init-postgres
        image: busybox
        securityContext:
          runAsUser: 0
        command:
        - sh
        - -c
        - |
          chown -R 999:999 /var/lib/postgresql/data
          chmod 700 /var/lib/postgresql/data
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        - containerPort: 8008
          name: patroni
        env:
        - name: POSTGRES_USER
          value: "hms_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          value: "hms_db"
        - name: PGDATA
          value: "/var/lib/postgresql/data"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        - name: pg-hba-config
          mountPath: /etc/postgresql/pg_hba.conf
          subPath: pg_hba.conf
        - name: patroni-config
          mountPath: /etc/patroni/patroni.yml
          subPath: patroni.yml
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U hms_user -d hms_db -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U hms_user -d hms_db -h 127.0.0.1 -p 5432
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgres-config
        configMap:
          name: postgres-config
          items:
          - key: postgresql.conf
            path: postgresql.conf
      - name: pg-hba-config
        configMap:
          name: postgres-config
          items:
          - key: pg_hba.conf
            path: pg_hba.conf
      - name: patroni-config
        configMap:
          name: postgres-config
          items:
          - key: patroni.yml
            path: patroni.yml
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
      labels:
        app: hospital-management-system
        component: database
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
      storageClassName: standard

---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgresql-hms
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
    system: postgresql
spec:
  selector:
    app: hospital-management-system
    component: database
    system: postgresql
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  - name: patroni
    port: 8008
    targetPort: 8008
  clusterIP: None

---
# PostgreSQL Read Service
apiVersion: v1
kind: Service
metadata:
  name: postgresql-read
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
    system: postgresql
spec:
  selector:
    app: hospital-management-system
    component: database
    system: postgresql
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  type: ClusterIP

---
# PostgreSQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
type: Opaque
data:
  password: aG1zX3VzZXJfcGFzc3dvcmQ=  # base64 encoded: hms_user_password
  postgres-password: cG9zdGdyZXNfcGFzc3dvcmQ=  # base64 encoded: postgres_password
  replicator-password: cmVwbGljYXRvcl9wYXNzd29yZA==  # base64 encoded: replicator_password

---
# PostgreSQL Backup CronJob
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: hms-admin
          containers:
          - name: postgres-backup
            image: postgres:15-alpine
            command:
            - /bin/sh
            - -c
            - |
              pg_dump -h postgresql-hms-0.postgresql-hms.ultimate-hms.svc.cluster.local \
                      -U hms_user \
                      -d hms_db \
                      --no-password \
                      --format=custom \
                      --compress=9 \
                      --file=/backup/hms_backup_$(date +%Y%m%d_%H%M%S).dump
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: postgres-backup-pvc
          restartPolicy: OnFailure

---
# PostgreSQL Backup PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-backup-pvc
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Gi
  storageClassName: standard

---
# PostgreSQL Metrics ServiceMonitor (for Prometheus)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: postgres-servicemonitor
  namespace: ultimate-hms
  labels:
    app: hospital-management-system
    component: database
spec:
  selector:
    matchLabels:
      app: hospital-management-system
      component: database
      system: postgresql
  endpoints:
  - port: patroni
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s