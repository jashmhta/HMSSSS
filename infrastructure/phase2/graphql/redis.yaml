---
# GraphQL API Layer - Unified Service Access
# Phase 2B: API Layer & Integration - Week 2
apiVersion: v1
kind: Namespace
metadata:
  name: graphql-system
  labels:
    app: hospital-management-system
    component: api
    system: graphql
    phase: phase2

---
# GraphQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: graphql-config
  namespace: graphql-system
  labels:
    app: hospital-management-system
    component: api
    system: graphql
data:
  OPENMRS_API_URL: "http://openmrs.openmrs-system.svc.cluster.local"
  METASFRESH_API_URL: "http://metasfresh-backend.metasfresh-system.svc.cluster.local"
  REDIS_URL: "redis://redis.graphql-system.svc.cluster.local:6379"
  ELASTICSEARCH_URL: "http://elasticsearch-hms.ultimate-hms.svc.cluster.local:9200"
  DATABASE_HOST: "postgresql-hms.ultimate-hms.svc.cluster.local"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "hms_db"
  DEFAULT_SCHEMA: "public"

---
# GraphQL Secrets
apiVersion: v1
kind: Secret
metadata:
  name: graphql-secrets
  namespace: graphql-system
  labels:
    app: hospital-management-system
    component: api
    system: graphql
type: Opaque
data:
  # Base64 encoded credentials
  openmrs-username: YWRtaW4=     # admin
  openmrs-password: YWRtaW5fcGFzc3cwcmQ=  # admin_passw0rd
  metasfresh-username: YWRtaW4=   # admin
  metasfresh-password: YWRtaW5fcGFzc3cwcmQ= # admin_passw0rd
  jwt-secret: Z3JhcGhxbC1hcGktand0LXNlY3JldC1rZXk= # graphql-api-jwt-secret-key
  redis-password: cmVkaXNfcGFzc3cwcmQ=   # redis_passw0rd
  db-username: aG1zX3VzZXI=     # hms_user
  db-password: aG1zX3VzZXJfcGFzc3cwcmQ=  # hms_user_password

---
# Redis for GraphQL Caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: graphql-system
  labels:
    app: hospital-management-system
    component: api
    system: graphql
    service: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hospital-management-system
      component: api
      system: graphql
      service: redis
  template:
    metadata:
      labels:
        app: hospital-management-system
        component: api
        system: graphql
        service: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: graphql-secrets
              key: redis-password
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}

