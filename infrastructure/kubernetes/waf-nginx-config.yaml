apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-waf-config
  namespace: hms
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;

    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    load_module modules/ngx_http_modsecurity_module.so;

    events {
      worker_connections 1024;
    }

    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      types_hash_max_size 2048;

      # ModSecurity WAF
      modsecurity on;
      modsecurity_rules_file /etc/nginx/modsec/main.conf;

      # Rate limiting
      limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
      limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;

      # Security headers
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;

      server {
        listen 80;
        server_name _;

        # ModSecurity rules
        location / {
          modsecurity_rules '
            SecRuleEngine On
            SecRule REQUEST_URI "@contains /api/" "id:1001,phase:1,t:lowercase,deny,status:403,msg:\'API access denied\'"
            SecRule ARGS "@contains <script>" "id:1002,phase:2,t:lowercase,deny,status:403,msg:\'XSS attempt blocked\'"
            SecRule REQUEST_HEADERS:User-Agent "@pm apachebench wget curl" "id:1003,phase:1,deny,status:403,msg:\'Bot access denied\'"
          ';

          # Rate limiting
          limit_req zone=api burst=20 nodelay;

          proxy_pass http://hms-backend:3001;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Auth endpoints with stricter limits
        location /api/v1/auth/ {
          limit_req zone=auth burst=5 nodelay;
          proxy_pass http://hms-backend:3001;
        }
      }
    }